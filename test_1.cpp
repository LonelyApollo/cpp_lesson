/*基础知识；
            1. 1字节占8个二进制位
            2. 十进制转二进制用除2取余逆序排列的方法，二进制转十进制用位权展开计算
            3. 十进制16961得二进制位 1000010 01000001  
                因为占2字节，此时从右开始数，前八位为“低位”，后八位为“高位”
                “高位”不够8位，则开头补0
            4. ASCII码 65对应A 97对应a    */
#include <stdio.h>
#include <stdlib.h>
typedef union mc
{
    char c[2];   //字符数组c，占2字节     数组格式arr[num]
    short int a; //短整型 占2字节         基本整型 int 占4字节
} TYPE; //指定新的类型名

int main()
{
    TYPE test;
    test.a = 16961;   //转换对应2进制，按照开头3的规则，得 01000010 01000001 
                      //此时引入数组知识，将“低”放入c0，将“高”放入c1
    printf("test.c[0]=%c\t  test.c[1]=%c\n", test.c[0], test.c[1]);
    //%c，以【字符】格式输出，将二进制转为十进制，得c0为65，得c1为66   所以 打印A与B
    system("pause");return 0;
}